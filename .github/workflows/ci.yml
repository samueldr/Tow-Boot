name: CI
on:
  - push
  - pull_request

# Cancel running jobs for the same branch or PR
concurrency:
  group: ${{ github.head_ref || github.ref_name }} 
  cancel-in-progress: true

jobs:
  generate-devices-matrix:
    name: Generate devices matrix
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: DeterminateSystems/nix-installer-action@v4
      - id: devices-matrix
        run: printf "matrix=%s" "$(nix-instantiate --json --eval .ci/devices-list.nix)" >> $GITHUB_OUTPUT
    outputs:
      matrix: ${{ steps.devices-matrix.outputs.matrix }}

  build-all-devices:
    name: "Build: ${{ matrix.device }}"
    needs: generate-devices-matrix
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        device: ${{ fromJson(needs.generate-devices-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: DeterminateSystems/nix-installer-action@v4
      - uses: DeterminateSystems/magic-nix-cache-action@v2
      - name: Build archive (release)
        if: "startsWith(github.ref, 'refs/tags/') && github.event_name != 'pull_request'"
        run: |
          nix-build \
            -A ${{ matrix.device }}.build.archive
      - name: Build archive (CI)
        if: "!(startsWith(github.ref, 'refs/tags/') && github.event_name != 'pull_request')"
        run: |
          nix-build \
            --arg configuration "{ lib, ... }: { Tow-Boot.releaseIdentifier = lib.mkForce ''-CI''; }" \
            -A ${{ matrix.device }}.build.archive
      - name: Rename archive
        run: |
          archive=$(readlink -f result)
          cp --dereference "$archive" "${archive#*-}"
      - name: Upload archive to Artifacts
        uses: actions/upload-artifact@v3
        with:
          path: '*.tar.xz'
          if-no-files-found: error

  docs:
    name: Build docs
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: DeterminateSystems/nix-installer-action@v4
      - run: nix-build doc/ -A archive
      - name: Rename archive
        run: |
          archive=$(readlink -f result)
          cp --dereference "$archive" "${archive#*-}"
      - name: Upload archive to Artifacts
        uses: actions/upload-artifact@v3
        with:
          path: '*.tar.xz'
          if-no-files-found: error

  release:
    name: Release
    if: startsWith(github.ref, 'refs/tags/') && github.event_name != 'pull_request'
    needs: [build-all-devices, docs]
    runs-on: ubuntu-22.04
    steps:
      - name: Download archives from Artifacts
        uses: actions/download-artifact@v3
      - name: Generate _checksums.txt
        run: shasum -a 256 * | sort --key 2 --stable > _checksums.txt
        working-directory: artifact
      - name: Upload archives to Releases
        uses: softprops/action-gh-release@v1
        with:
          files: artifact/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
