name: CI
on:
  - push
  - pull_request

jobs:
  generate-devices-matrix:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: DeterminateSystems/nix-installer-action@v4
      - id: devices-matrix
        run: printf "matrix=%s" "$(nix-instantiate --json --eval .ci/devices-list.nix >> $GITHUB_OUTPUT)"
    outputs:
      matrix: ${{ steps.devices-matrix.outputs.matrix }}

  build-all-devices:
    name: Build for ${{ matrix.device }}
    needs: generate-devices-matrix
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        device: ${{ fromJson(needs.generate-devices-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: DeterminateSystems/nix-installer-action@v4
      - uses: DeterminateSystems/magic-nix-cache-action@main # XXX lock to a version
      - name: Build images for ${{ matrix.device }}
        run: nix-build -A ${{ matrix.device }}
      # XXX: Artifacts are built for each push and pull request, so better to
      # keep them small, otherwise we would run out of space on GitHub quickly.
      - name: Remove unnecessary files
        if: "!startsWith(github.ref, 'refs/tags/')"  # if not release
        run: sudo rm -rf result/{binaries,config,source}

      - name: Build archive
        run: nix-build -A ${{ matrix.device }}.build.archive

      - name: Rename archive
        run: |
          archive=$(readlink -f result)
          cp -L "$archive" "${archive#*-}"

      - name: Upload archive to Artifacts
        uses: actions/upload-artifact@v3
        with:
          path: '*.tar.xz'
          if-no-files-found: error

  release:
    name: Release
    if: startsWith(github.ref, 'refs/tags/') && github.event_name != 'pull_request'
    needs: build-all-devices
    runs-on: ubuntu-22.04
    steps:
      - name: Download archives from Artifacts
        uses: actions/download-artifact@v3

      - name: Generate checksums.txt
        run: shasum -a 256 * > checksums.txt
        working-directory: artifact

      - name: Upload archives to Releases
        uses: softprops/action-gh-release@v1
        with:
          files: artifact/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
